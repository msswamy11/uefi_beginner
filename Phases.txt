Below content inherited from open sources
  SEC: https://uefi.org/specs/PI/1.8/V1_Security_SEC_Phase_Information.html
  

With more analysis.,
As we learned 8086 operates in real mode that is 16 bit.
  Segments -> 1) code segment, 2) Data segment, 3) stack segment, 4) Extra segment.
  Physical address = Segment * 16 + Offset
  Memory protection not available, can be achieved with GDT.
  
For compatability latest processors will start from real mode and switch to protected mode.

=> UEFI Security phase
• Handling all platform restart events
• Creating a temporary memory store
  MTRR's configured to use chache memory as RAM(CAR).
  Here No eviction mode enabled to avoid gradual data export into primary memory that leads SEC phase failure.
  MTRR's also responsible for Boot Firmware volume write protected.
• Serving as the root of trust in the system
  In inductive security design systems, the module which is going to take control subsequently has to be authenticated by SEC firmware(which has root).
  SO here PEI foundation has to be authenticated by SEC.
  Understanding: 
    Piece of firmware which is on ROM, encrypted with OEM signature.
• Passing handoff information to the PEI Foundation
  CAR size and location.
  Stack size and location.



=> UEFI Pre-EFI Initialization code(PEI)
  PEI Foundation
    PPI Service - Locate,
    Firmware volume services - To locate FV, and PEIMs.
    Memory services - Create meomory, copy, move.
    
    It will install 
  PEI Dispatcher
    It will start executing PEIMs based on PPIs installed by foundation code.
 

=> UEFI Driver execution code(DXE)
  DXE Foundation - Produces below services
    Boot services
    Run time services
  DXE Dispatcher
    Evaluates DPEX, and start execution DXE driver.
  DXE Driver
  

=> UEFI Boot device selection(BDS)
